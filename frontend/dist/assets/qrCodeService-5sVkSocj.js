var e=Object.defineProperty,t=Object.defineProperties,a=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,d=(t,a,r)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[a]=r,i=(e,t,a)=>new Promise(((r,n)=>{var o=e=>{try{i(a.next(e))}catch(t){n(t)}},d=e=>{try{i(a.throw(e))}catch(t){n(t)}},i=e=>e.done?r(e.value):Promise.resolve(e.value).then(o,d);i((a=a.apply(e,t)).next())}));import{c as s,T as l}from"./index-B9AZMt1L.js";const u={downloadQRCode:e=>i(void 0,null,(function*(){try{return(yield s.get(`/admin/students/${e}/qr-code`,{responseType:"blob"})).data}catch(t){throw l.error("Failed to download QR code"),t}})),getStudentQRCode:e=>i(void 0,null,(function*(){var t,a;try{if(!e)throw new Error("Student ID is required");try{const a=yield s.get(`/qr/student/${e}`);return(null==(t=a.data)?void 0:t.data)&&"string"==typeof a.data.data&&a.data.data.startsWith("data:image")?{data:a.data.data,success:!0,imageFound:!0}:a.data}catch(r){if(404!==(null==(a=r.response)?void 0:a.status))throw r;try{const t=yield s.get(`/admin/students/${e}/qr-code`,{responseType:"blob"});return new Promise((a=>{const r=new FileReader;r.onloadend=()=>{const t={_id:e,qrImage:r.result,timestamp:(new Date).toISOString()};a({data:t,imageFound:!0})},r.readAsDataURL(t.data)}))}catch(n){throw r}}}catch(o){return null}})),saveQRCode:(e,t)=>i(void 0,null,(function*(){try{if(!e||!t)throw new Error("Student ID and QR data are required");return(yield s.post(`/qr/student/${e}`,{qrData:t})).data}catch(a){throw a}})),getQRCodeByIndex:e=>i(void 0,null,(function*(){try{if(!e)throw new Error("Index number is required");return(yield s.get(`/admin/students/qr-code/${e}`,{responseType:"blob"})).data}catch(t){throw l.error("Failed to get QR code"),t}})),getStudentDetails:e=>i(void 0,null,(function*(){var i,l,u,c,m,p;try{let y;const w=/^[0-9a-fA-F]{24}$/.test(e);let f;if(y=w?yield s.get(`/students/profile/${e}`):yield s.get("/admin/students",{params:{indexNumber:e.toString().toUpperCase(),includeAttendance:!0,includeProfile:!0}}),w)f=(null==(i=y.data)?void 0:i.student)||y.data;else{f=((null==(l=y.data)?void 0:l.students)||(null==(u=y.data)?void 0:u.data)||[]).find((t=>{var a;return(null==(a=t.indexNumber)?void 0:a.toUpperCase())===e.toString().toUpperCase()}))}if(!f)throw new Error("Student not found");const h=new Date;h.setHours(0,0,0,0);const v=null==(c=f.attendanceHistory)?void 0:c.find((e=>{const t=new Date(e.date);return t.setHours(0,0,0,0),t.getTime()===h.getTime()}));return m=((e,t)=>{for(var a in t||(t={}))n.call(t,a)&&d(e,a,t[a]);if(r)for(var a of r(t))o.call(t,a)&&d(e,a,t[a]);return e})({},f),p={todayAttendance:v,formattedDetails:{name:f.name||"N/A",indexNumber:f.indexNumber||"N/A",email:f.student_email||"N/A",parentEmail:f.parent_email||"N/A",telephone:f.parent_telephone||"N/A",address:f.address||"N/A",whatsappStatus:f.whatsappStatus||"Not configured",lastNotification:f.lastNotification?new Date(f.lastNotification).toLocaleString():"N/A",todayStatus:v?v.status:"Not marked",entryTime:(null==v?void 0:v.entryTime)?new Date(v.entryTime).toLocaleTimeString():"N/A",leaveTime:(null==v?void 0:v.leaveTime)?new Date(v.leaveTime).toLocaleTimeString():"N/A"}},t(m,a(p))}catch(y){throw y}})),markAttendanceQR:e=>i(void 0,null,(function*(){var t,a,r;try{if(!e)throw new Error("QR code data is required");const a=yield s.post("/qr/markAttendanceQR",{qrData:e,deviceInfo:navigator.userAgent,scanLocation:"QR Scanner"});if(a.data.success){const e=a.data.data.student,r=(null==(t=a.data.data.attendance.current)?void 0:t.status)||"present";return l.success(`QR Attendance: ${e.name} (${e.indexNumber}) has ${"entered"===r?"entered":"left"===r?"left":r}`),{success:!0,data:a.data.data}}return l.error(a.data.message||"Failed to mark attendance"),{success:!1,error:a.data.message,data:a.data.data}}catch(n){throw l.error((null==(r=null==(a=n.response)?void 0:a.data)?void 0:r.message)||"Failed to process QR code"),n}})),searchQRCode:e=>i(void 0,null,(function*(){try{const{name:t,indexNumber:a}=e;if(!t&&!a)throw new Error("Either name or index number is required");return(yield s.get("/students/search-qr",{params:e})).data}catch(t){throw t}})),downloadQRCodeByParams:e=>i(void 0,null,(function*(){try{const t=new URLSearchParams(e);return(yield s.get(`/students/download-qr-code?${t.toString()}`,{responseType:"blob"})).data}catch(t){throw l.error("Failed to download QR code"),t}}))};export{u as q};
